{"version":3,"file":"index-a73c8982.js","sources":["../../src/const.ts","../../src/main.ts"],"sourcesContent":["export const BLOCK_SIZE = 20\r\nexport const BOARD_WIDTH = 14\r\nexport const BOARD_HEIGHT = 28\r\n\r\nexport type PieceShape = 'square' | 'line' | 't-shape' | 'z-shape' | 'z-reverse-shape' | 'l-shape';\r\n\r\n\r\n// 9. random pieces\r\nexport const PIECES:{\r\n  id: PieceShape\r\n  shape: number[][]\r\n  color: string\r\n}[] = \r\n\r\n[\r\n    {\r\n      id: 'square',\r\n      shape:[\r\n      [1, 1],\r\n      [1, 1]\r\n      ],\r\n      color: 'red'\r\n    },\r\n    {\r\n     id:'line',\r\n     shape: [\r\n      [1, 1, 1, 1]\r\n    ],\r\n    color: 'blue'\r\n  },\r\n  {\r\n    id:'t-shape',\r\n   shape: [\r\n      [0, 1, 0],\r\n      [1, 1, 1]\r\n    ],\r\n    color: 'purple'\r\n  },\r\n  {\r\n    id:'z-shape',\r\n    shape: [\r\n      [1, 1, 0],\r\n      [0, 1, 1]\r\n    ],\r\n    color: 'green'\r\n  },\r\n  {\r\n    id:'l-shape',\r\n    shape: [\r\n      [1, 0],\r\n      [1, 0],\r\n      [1, 1]\r\n    ],\r\n    color: 'yellow'\r\n  },\r\n  {\r\n    id:'z-reverse-shape',\r\n    shape: [\r\n      [0, 1, 1],\r\n      [1, 1, 0]\r\n    ],\r\n    color: 'orange'\r\n  }\r\n  ]\r\n  export const difficultyLevels: { scoreThreshold: number; fallSpeed: number }[] = \r\n  [\r\n    { scoreThreshold: 0, fallSpeed: 1 }, \r\n    { scoreThreshold: 50, fallSpeed: 2 }, \r\n    { scoreThreshold: 150, fallSpeed: 6},\r\n    { scoreThreshold: 200, fallSpeed: 8},\r\n    { scoreThreshold: 250, fallSpeed: 10}, \r\n    // Agrega más niveles según sea necesario\r\n  ];\r\n  \r\n \r\n  ","import './style.css';\nimport { BLOCK_SIZE, BOARD_WIDTH, BOARD_HEIGHT, PIECES, PieceShape, difficultyLevels } from './const';\n\nlet score = 0\nlet currentLevel = 1 // Inicialmente, el jugador comienza en el nivel 1\nlet currentFallSpeed = difficultyLevels[currentLevel - 1].fallSpeed;\nconsole.log(`currentFallSpeed: ${currentFallSpeed}`);\n\n\n// 1. Inicializar canvas\nconst canvas: HTMLCanvasElement | null = document.querySelector('canvas');\nconst context: CanvasRenderingContext2D | null | undefined = canvas?.getContext('2d');\n\nif (canvas && context) {\n  canvas.width = BLOCK_SIZE * BOARD_WIDTH\n  canvas.height = BLOCK_SIZE * BOARD_HEIGHT\n\n  context.scale(BLOCK_SIZE, BLOCK_SIZE)\n}\n\n// 3. Board\nfunction createBoard(width: number, height: number): number[][] {\n  return Array(height).fill(0).map(() => Array(width).fill(0))\n}\nconst board = createBoard(BOARD_WIDTH, BOARD_HEIGHT)\n\n// 4. Pieces player\nconst piece: {\n  id: PieceShape;\n  position: { x: number; y: number }\n  shape: number[][]\n} = {\n  id: 'square',\n  position: { x: 5, y: 5 },\n  shape: [\n    [1, 1],\n    [1, 1],\n  ],\n};\n\n// Game loop\nlet dropCounter = 0\nlet lastTime = 0\nfunction update(time = 0) {\n  \n  const deltaTime = time - lastTime\n  lastTime = time\n  dropCounter += deltaTime * currentFallSpeed;\n\n  // Actualizar el puntaje en la interfaz\n  updateScoreDisplay();\n\n  if (dropCounter > 1000) {\n    piece.position.y++\n    dropCounter = 0\n\n    if (checkCollision()) {\n      piece.position.y--\n      solidifyPiece()\n      removeRows()\n    }\n  }\n\n  draw()\n  window.requestAnimationFrame(update)\n}\n\nfunction draw() {\n  \n  if (context) {\n    context.fillStyle = '#000'\n    context.fillRect(0, 0, canvas?.width || 0, canvas?.height || 0)\n\n    board.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value === 1) {\n          context.fillStyle = 'gray'\n          context.fillRect(x, y, 1, 1)\n        }\n      })\n    })\n\n    piece.shape.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value) {\n          const pieceColor = PIECES.find(p => p.id === piece.id)\n          const color = pieceColor ? pieceColor.color : 'black'\n          context.fillStyle = color\n          context.fillRect(x + piece.position.x, y + piece.position.y, 1, 1)\n\n        }   \n      })\n    })\n  }\n}\n\n// Movimiento de pieza\ndocument.addEventListener('keydown', (event: KeyboardEvent) => {\n  if (event.key === 'ArrowLeft') {\n    piece.position.x--\n    if (checkCollision()) {\n      piece.position.x++\n    }\n  }\n\n  if (event.key === 'ArrowRight') {\n    piece.position.x++\n    if (checkCollision()) {\n      piece.position.x--\n    }\n  }\n\n  if (event.key === 'ArrowDown') {\n    piece.position.y++\n    if (checkCollision()) {\n      piece.position.y--\n      solidifyPiece()\n      removeRows()\n    }\n  }\n\n  // Rotar piezas\n  if (event.key === 'ArrowUp') {\n    const rotated: number[][] = []\n    for (let i = 0; i < piece.shape[0].length; i++) {\n      const row: number[] = []\n      for (let j = piece.shape.length - 1; j >= 0; j--) {\n        row.push(piece.shape[j][i])\n      }\n      rotated.push(row)\n    }\n    const previousShape: number[][] = piece.shape\n    piece.shape = rotated\n\n    if (checkCollision()) {\n      piece.shape = previousShape\n    }\n  }\n})\n\n// Colisiones\nfunction checkCollision(): boolean {\n  return !!piece.shape.find((row, y) =>\n    row.find((value, x) =>\n      value !== 0 && board[y + piece.position.y]?.[x + piece.position.x] !== 0\n    )\n  )\n}\n\n// Solidificar piezas\nfunction solidifyPiece() {\n  piece.shape.forEach((row, y) => {\n    row.forEach((value, x) => {\n      if (value === 1) {\n        board[y + piece.position.y][x + piece.position.x] = 1\n      }\n    })\n  })\n\n  // Reiniciar posición\n  piece.position.x = Math.floor(BOARD_WIDTH / 2 - 2)\n  piece.position.y = 0\n\n  // Obtener forma aleatoria\nconst randomPiece = PIECES[Math.floor(Math.random() * PIECES.length)]\npiece.id = randomPiece.id // Update the ID of the piece\npiece.shape = randomPiece.shape\n\n  // Game over\n  if (checkCollision()) {\n    alert('¡Game over! I sorry.')\n    board.forEach((row) => row.fill(0))\n    // Reiniciar el puntaje en caso de Game Over y el nivel\n    score = 0\n    currentLevel = 1\n    currentFallSpeed = difficultyLevels[currentLevel - 1].fallSpeed\n  }\n}\n\n// Remover filas\nfunction removeRows() {\n  const rowsToRemove: number[] = []\n  board.forEach((row, y) => {\n    if (row.every(value => value === 1)) {\n      rowsToRemove.push(y)\n    }\n  })\n  if (rowsToRemove.length > 0) {\n    // Incrementa el puntaje por cada línea eliminada\n    score += rowsToRemove.length * 10;\n    updateScoreDisplay();\n  }\n\n  rowsToRemove.forEach(y => {\n    board.splice(y, 1)\n    const newRow: number[] = Array(BOARD_WIDTH).fill(0)\n    board.unshift(newRow)\n  })\n}\nfunction updateScoreDisplay() {\n  const scoreDisplay = document.getElementById('score-display');\n\n  if (scoreDisplay) {\n    scoreDisplay.textContent = score.toString();\n  }\n \n  if (currentLevel < difficultyLevels.length && score >= difficultyLevels[currentLevel].scoreThreshold) {\n    currentLevel++;\n    currentFallSpeed = difficultyLevels[currentLevel - 1].fallSpeed;\n  }\n}\nupdate()\n"],"names":["BOARD_WIDTH","PIECES","id","shape","color","difficultyLevels","scoreThreshold","fallSpeed","score","currentLevel","currentFallSpeed","console","log","canvas","document","querySelector","context","getContext","width","height","BLOCK_SIZE","scale","board","Array","fill","map","piece","position","x","y","dropCounter","lastTime","checkCollision","find","row","value","_a","solidifyPiece","forEach","Math","floor","randomPiece","random","length","alert","removeRows","rowsToRemove","every","push","splice","newRow","unshift","updateScoreDisplay","scoreDisplay","getElementById","textContent","toString","addEventListener","event","key","rotated","i","j","previousShape","update","time","deltaTime","fillStyle","fillRect","pieceColor","p","window","requestAnimationFrame"],"mappings":"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"}